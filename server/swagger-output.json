{
  "swagger": "2.0",
  "info": {
    "title": "AutoPlaylist API",
    "version": "1.0.0",
    "description": "AutoPlaylist API",
    "termsOfService": "http://www.github.com/blacky-yg/Auto-Playlist",
    "contact": {
      "name": "Auto Team",
      "url": "http://www.github.com/blacky-yg/Auto-Playlist",
      "email": ""
    }
  },
  "host": "https://auto-playlist.herokuapp.com/docs",
  "servers": [
    {
      "url": "https://auto-playlist.herokuapp.com/docs",
      "description": "AutoPlaylist API"
    }
  ],
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Authentication routes"
    },
    {
      "name": "Playlist",
      "description": "Playlist routes"
    }
  ],
  "schemes": ["http"],
  "securityDefinitions": {
    "type": "basic",
    "in": "header"
  },
  "paths": {
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "_public": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/spotify": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/spotify/callback": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/profile": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "_public": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "tracks": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}/info": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/{id}/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "tracks": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Hamidou TESSILIMI"
        },
        "email": {
          "type": "string",
          "example": "hamidtessilimi@gmail.com"
        },
        "access_token": {
          "type": "string",
          "example": "access_token"
        },
        "refresh_token": {
          "type": "string",
          "example": "refresh_token"
        }
      }
    },
    "Playlist": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Playlist name"
        },
        "description": {
          "type": "string",
          "example": "Playlist description"
        },
        "_public": {
          "type": "boolean",
          "example": true
        }
      }
    }
  }
}
